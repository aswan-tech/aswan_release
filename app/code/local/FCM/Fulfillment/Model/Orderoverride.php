<?php/** * Magento Model to override core sales order model to send order cancellation mails * * This model overrides function registerCancellation to send email after order cancellation. * * @category    FCM * @package     FCM_Fulfillment * @author	Pawan Prakash Gupta * @author_id	51405591 * @company	HCL Technologies * @created Thursday, August 8, 2012 * @copyright	Four cross media *//** * Observer model class * * @category    FCM * @package     FCM_Fulfillment * @author      Pawan Prakash Gupta <51405591> */ class FCM_Fulfillment_Model_Orderoverride extends Mage_Sales_Model_Order{   /**     * Prepare order totals to cancellation     * @param string $comment     * @param bool $graceful     * @return Mage_Sales_Model_Order     * @throws Mage_Core_Exception     */    public function registerCancellation($comment = '', $graceful = true)    {        if ($this->canCancel()) {            $cancelState = self::STATE_CANCELED;            foreach ($this->getAllItems() as $item) {                if ($cancelState != self::STATE_PROCESSING && $item->getQtyToRefund()) {                    if ($item->getQtyToShip() > $item->getQtyToCancel()) {                        $cancelState = self::STATE_PROCESSING;                    } else {                        $cancelState = self::STATE_COMPLETE;                    }                }                $item->cancel();            }            $this->setSubtotalCanceled($this->getSubtotal() - $this->getSubtotalInvoiced());            $this->setBaseSubtotalCanceled($this->getBaseSubtotal() - $this->getBaseSubtotalInvoiced());            $this->setTaxCanceled($this->getTaxAmount() - $this->getTaxInvoiced());            $this->setBaseTaxCanceled($this->getBaseTaxAmount() - $this->getBaseTaxInvoiced());            $this->setShippingCanceled($this->getShippingAmount() - $this->getShippingInvoiced());            $this->setBaseShippingCanceled($this->getBaseShippingAmount() - $this->getBaseShippingInvoiced());            $this->setDiscountCanceled(abs($this->getDiscountAmount()) - $this->getDiscountInvoiced());            $this->setBaseDiscountCanceled(abs($this->getBaseDiscountAmount()) - $this->getBaseDiscountInvoiced());            $this->setTotalCanceled($this->getGrandTotal() - $this->getTotalPaid());            $this->setBaseTotalCanceled($this->getBaseGrandTotal() - $this->getBaseTotalPaid());            $this->_setState($cancelState, true, $comment, true);        } elseif (!$graceful) {            Mage::throwException(Mage::helper('sales')->__('Order does not allow to be canceled.'));        }        return $this;    }}