<?php/** * Magento Model to send order cancellation mails * * This model defines the function function to send email after order cancellation. * * @category    FCM * @package     FCM_Fulfillment * @author	Pawan Prakash Gupta * @author_id	51405591 * @company	HCL Technologies * @created Thursday, August 8, 2012 * @copyright	Four cross media *//** * Observer model class * * @category    FCM * @package     FCM_Fulfillment * @author      Pawan Prakash Gupta <51405591> */class FCM_Fulfillment_Model_Observer {    /**     * Event Hook: order_cancel_after     * @param $observer Varien_Event_Observer     */    public function sendOrderCancelMail($evt) {        $order = $evt->getOrder();        $payMethod = $order->getPayment()->getMethod();        if ($payMethod == 'cashondelivery') {            $storeId = $order->getStore()->getId();            // Start store emulation process            $appEmulation = Mage::getSingleton('core/app_emulation');            $initialEnvironmentInfo = $appEmulation->startEnvironmentEmulation($storeId);            try {                // Retrieve specified view block from appropriate design package (depends on emulated store)                $paymentBlock = Mage::helper('payment')->getInfoBlock($order->getPayment())                                ->setIsSecureMode(true);                $paymentBlock->getMethod()->setStore($storeId);                $paymentBlockHtml = $paymentBlock->toHtml();            } catch (Exception $exception) {                // Stop store emulation process                $appEmulation->stopEnvironmentEmulation($initialEnvironmentInfo);                throw $exception;            }            // Stop store emulation process            $appEmulation->stopEnvironmentEmulation($initialEnvironmentInfo);            $order->setIsCancel(1); //Nov 22, 2012 For sending different message in Order update email for 'cancel' status            $order->setPaymentHtml($paymentBlockHtml);            $order->sendOrderUpdateEmail(1);        }    }    public function saveShippingProvider($data) {        try {            $_order = $data->getOrder();            $shippingId = $_order->getShippingAddress()->getId();						$_subtotal = (float)$_order->getSubtotal();            $_shipping_method = $_order->getShippingMethod();            $_shipping_method_name = explode('_', $_shipping_method);                       // Get shipping address data using the id            $address = Mage::getModel('sales/order_address')->load($shippingId);						$_countryId = $address->getCountryId();            $_postcode = $address->getPostcode();            $_region = $address->getRegion();						if($_countryId == 'IN'){				if (isset($_shipping_method_name[0])) {					$_shipping_method = $_shipping_method_name[0];				}				$collection = Mage::getModel('zipcodeimport/zipcodeimport')->getCollection()->addFieldToFilter('zip_code', Array('eq' => $_postcode));				if (count($collection) > 0) {					foreach ($collection as $value) {						if ($value[$_shipping_method] == 1) {							$_provider = $value['blinkecarrier_id'];							$_order->setData('blinkecarrier_id', $_provider)->save();							break;						}					}				}			}else{				if (isset($_shipping_method_name[1])) {					$_provider = $_shipping_method_name[1];				}				$_order->setData('blinkecarrier_id', $_provider)->save();				}              } catch (exception $e) {            Mage::log('Exception occured while saving shipping provider for Order Id : ' . $e);        }    }    function trackGetItConversion($obj) {		$_affiliateCode = '';		$_pixelfound = false;			if (isset($_COOKIE["pixelAffiliateCookie"])){			$_pixelfound = true;			$_affiliateCode = $_COOKIE["pixelAffiliateCookie"];		}				if($_pixelfound && $_affiliateCode == "getit-microsite"){			$order = $obj->getOrder();			$orderId = $order->getRealOrderId();			$grandTotal = $order->getData('grand_total');			$qty = round($order->getTotalQtyOrdered());			$dgm_trackUrl = "http://pixel.affcamp.co.in/americanswancpa.php?o=".$orderId."&g=transaction&s=" . $grandTotal . "&q=". $qty;			if (Mage::getStoreConfigFlag('getitconversion/tracking/active')) {				$referralId = Mage::getStoreConfig('getitconversion/tracking/referralid');				if (!empty($referralId)) {					$trackUrl = "https://fashion.getit.in/index.php/paymentinfo?Orderid=" . $orderId . "&amount=" . $grandTotal . "&ref_id=" . $referralId;					try {						$ch = curl_init();						curl_setopt($ch, CURLOPT_URL, $trackUrl);						curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);						curl_exec($ch);						curl_close($ch);					} catch (Exception $e) {						$errmsg = $e->getMessage() . "\n" . $e->getTraceAsString();						Mage::log($errmsg, Zend_Log::ERR, 'exception');					}				}			}			try {				$ch = curl_init();				curl_setopt($ch, CURLOPT_URL, $dgm_trackUrl);				curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);				curl_exec($ch);				curl_close($ch);			} catch (Exception $e) {				$errmsg = $e->getMessage() . "\n" . $e->getTraceAsString();				Mage::log($errmsg, Zend_Log::ERR, 'exception');			}		}    }}